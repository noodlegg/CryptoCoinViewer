{"version":3,"sources":["PriceContainer.js","PriceDisplay.js","images/btc_banner.png","images/eth_banner.png","images/iota_banner.png","images/xrp_banner.png","images/xlm_banner.png","NavBar.js","Collapse.js","Footer.js","Banner.js","LineChart.js","ChartDataFetch.js","App.js","serviceWorker.js","index.js"],"names":["global","fetch","require","setApiKey","PriceContainer","_React$Component","props","_this","Object","C_Users_Thomas_Documents_GitHub_CryptoCoinViewer_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Thomas_Documents_GitHub_CryptoCoinViewer_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Thomas_Documents_GitHub_CryptoCoinViewer_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","price","C_Users_Thomas_Documents_GitHub_CryptoCoinViewer_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Thomas_Documents_GitHub_CryptoCoinViewer_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this2","name","url","console","log","then","r","json","cryptoprice","setState","catch","e","_this3","getData","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","keys","map","_PriceDisplay__WEBPACK_IMPORTED_MODULE_7__","currency","React","Component","NumberFormat","numStyle","float","PriceDisplay","apply","arguments","displayType","decimalprecision","thousandSeparator","style","module","exports","__webpack_require__","p","navBarStyle","background","h1Style","margin","fontFamily","color","NavBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","bind","assertThisInitialized","isOpen","target","onChange","react_default","reactstrap_es","light","expand","fixedTop","href","className","navbar","buttonStyle","cardStyle","Example","toggle","collapse","buttonText","onClick","divStyle","borderTop","textAlign","position","height","marginTop","right","left","bottom","Footer","Collapse","imgStyle","maxWidth","Banner","imgSrc","btcBanner","ethBanner","iotaBanner","xrpBanner","xlmBanner","src","alt","LineChart","data","min","x","max","length","reduce","y","_this$props","svgWidth","yLabelSize","getX","_this$props2","svgHeight","xLabelSize","gY","getY","pathD","getSvgX","getSvgY","point","i","join","d","x1","y1","x2","y2","strokeDasharray","_this$props3","transform","concat","textAnchor","toLocaleString","_this$props4","width","viewBox","makeAxis","makePath","makeArea","makeLabels","defaultProps","pointRadius","ChartDataFetch","fetchingData","bitcoinData","sortedData","count","date","bpi","push","moment","format","src_LineChart_0","onChartHover","b","handleChartHover","rel","App","coin","setCrypto","string","NavBar_NavBar","Banner_Banner","src_ChartDataFetch_0","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b8734bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './PriceContainer.css';\r\nimport PriceDisplay from './PriceDisplay';\r\nglobal.fetch = require('node-fetch');\r\nconst cc = require('cryptocompare');\r\ncc.setApiKey('b81b6853cc9d66cc6f37ca2071225d4af39b1959bb7da992c54bbb4aa2a5be94');\r\n\r\nexport class PriceContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      price: 0,\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    const name = this.props.name;\r\n    const url = 'https://min-api.cryptocompare.com/data/price?fsym='+ name\r\n    + '&tsyms=EUR,USD,JPY,GBP,CHF,CNY,CAD,KRW,HKD,AUD';\r\n    console.log(name);\r\n\r\n    fetch(url).then(r => r.json())\r\n      .then((cryptoprice) => {\r\n        this.setState({\r\n          price: cryptoprice\r\n        })\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    this.getData();\r\n    return (\r\n      <div id='container'>\r\n          {Object.keys(this.state.price).map(key => {\r\n            return (\r\n              <PriceDisplay\r\n                currency={key}\r\n                value={this.state.price[key]} />\r\n            )\r\n          })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PriceContainer;\r\n","import React from 'react';\r\nimport './PriceDisplay.css';\r\nvar NumberFormat = require('react-number-format');\r\n\r\nconst numStyle = {\r\n  float: 'right'\r\n};\r\n\r\nexport class PriceDisplay extends React.Component {\r\n  render() {\r\n    let key = this.props.currency;\r\n    let value = this.props.value;\r\n    console.log(this.props);\r\n    return (\r\n      <div id='priceRow'>\r\n        <h3>\r\n          {key} <NumberFormat // shows the value in a formatted way\r\n            value={value}\r\n            displayType={'text'}\r\n            decimalprecision={2}\r\n            thousandSeparator={true}\r\n            style={numStyle} />\r\n        </h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PriceDisplay;\r\n","module.exports = __webpack_public_path__ + \"static/media/btc_banner.d5084f7c.png\";","module.exports = __webpack_public_path__ + \"static/media/eth_banner.e6a2ba14.png\";","module.exports = __webpack_public_path__ + \"static/media/iota_banner.616d6ce3.png\";","module.exports = __webpack_public_path__ + \"static/media/xrp_banner.c82f1e4b.png\";","module.exports = __webpack_public_path__ + \"static/media/xlm_banner.6ad73501.png\";","import React from 'react';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav } from 'reactstrap';\r\n\r\n  const navBarStyle = {\r\n    background: '#344955'\r\n  };\r\n\r\n  const h1Style = {\r\n    margin: '0 0 0 10px',\r\n    fontFamily: 'Arial Black',\r\n    color: 'white'\r\n  };\r\n\r\n  export default class NavBar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state = {\r\n        isOpen: false\r\n      };\r\n    }\r\n\r\n    handleChange(e) {\r\n      const name = e.target.value;\r\n      this.props.onChange(name);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Navbar light expand='md' fixedTop style={navBarStyle}>\r\n            <NavbarBrand href='/.App'><h1 style={h1Style}>CryptoCoin Viewer</h1></NavbarBrand>\r\n              <Nav className='ml-auto' navbar>\r\n                <select id='coin' onChange={this.handleChange}>\r\n                  <option value='BTC'>\r\n                    Bitcoin\r\n                  </option>\r\n                  <option value='ETH'>\r\n                    Ethereum\r\n                  </option>\r\n                  <option value='IOTA'>\r\n                    IOTA\r\n                  </option>\r\n                  <option value='XRP'>\r\n                    Ripple\r\n                  </option>\r\n                  <option value='XLM'>\r\n                    Stellar\r\n                  </option>\r\n                </select>\r\n              </Nav>\r\n          </Navbar>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Button, Card } from 'reactstrap';\r\n\r\nconst buttonStyle = {\r\n  background: '#F9AA33',\r\n};\r\n\r\nconst cardStyle = {\r\n  color: 'white',\r\n  background: '#4A6572',\r\n};\r\n\r\nclass Example extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = { collapse: false };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n\r\n  render() {\r\n    let buttonText;\r\n    if (!this.state.collapse) {\r\n      buttonText = 'Psst...';\r\n    } else {\r\n      buttonText = 'OK!';\r\n    }\r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={this.toggle} style={buttonStyle}>\r\n          {buttonText}\r\n        </Button>\r\n        <Collapse isOpen={this.state.collapse}>\r\n          <Card style={cardStyle}>\r\n            Don't worry about browser miners  :^]\r\n          </Card>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","import React from 'react';\r\nimport Collapse from './Collapse';\r\n\r\nconst divStyle = {\r\n  background: '#4A6572',\r\n  borderTop: '1px solid black',\r\n  textAlign: 'right',\r\n  position: 'relative',\r\n  height: '40px',\r\n  marginTop: ' 28px',\r\n  right: ' 0',\r\n  left: ' 0',\r\n  bottom: '0',\r\n  color: 'white'\r\n};\r\n\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={divStyle}>\r\n        <Collapse />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport btcBanner from './images/btc_banner.png';\r\nimport ethBanner from './images/eth_banner.png';\r\nimport iotaBanner from './images/iota_banner.png';\r\nimport xrpBanner from './images/xrp_banner.png';\r\nimport xlmBanner from './images/xlm_banner.png';\r\n\r\nconst imgStyle = {\r\n  maxWidth: '100%',\r\n  height: 'auto'\r\n};\r\n\r\nexport default class Banner extends React.Component {\r\n  render() {\r\n    let imgSrc;\r\n    const name = this.props.name;\r\n    if (name === 'BTC') {\r\n      imgSrc = btcBanner\r\n    } else if (name === 'ETH') {\r\n      imgSrc = ethBanner\r\n    } else if (name === 'IOTA') {\r\n      imgSrc = iotaBanner\r\n    } else if (name === 'XRP') {\r\n      imgSrc = xrpBanner\r\n    } else if (name === 'XLM') {\r\n      imgSrc = xlmBanner\r\n    }\r\n    return (\r\n      <div>\r\n        <img\r\n          src={imgSrc}\r\n          style={imgStyle}\r\n          alt='coin banner' />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './LineChart.css';\r\n\r\nclass LineChart extends React.Component {\r\n  getX() {\r\n    const {data} = this.props;\r\n    return {\r\n      min: data[0].x,\r\n      max: data[data.length - 1].x\r\n    }\r\n  }\r\n  getY() {\r\n    const {data} = this.props;\r\n    return {\r\n      min: data.reduce((min, p) => p.y < min ? p.y : min, data[0].y),\r\n      max: data.reduce((max, p) => p.y > max ? p.y : max, data[0].y)\r\n    }\r\n  }\r\n\r\n  getSvgX(x) {\r\n    const {svgWidth, yLabelSize} = this.props;\r\n    return yLabelSize + (x / this.getX().max * (svgWidth - yLabelSize));\r\n  }\r\n  getSvgY(y) {\r\n    const {svgHeight, xLabelSize} = this.props;\r\n    const gY = this.getY();\r\n    return ((svgHeight - xLabelSize) * gY.max - (svgHeight - xLabelSize) * y) / (gY.max - gY.min);\r\n    }\r\n  // Build SVG path\r\n  makePath() {\r\n    const {data} = this.props;\r\n    let pathD = \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\r\n    pathD += data.map((point, i) => {\r\n      return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\r\n    }).join(\"\");\r\n\r\n    return <path className='linechart_path' d={pathD} />\r\n  }\r\n  // Build shaded area\r\n  makeArea() {\r\n    const {data} = this.props;\r\n    let pathD = \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\r\n    pathD += data.map((point, i) => {\r\n      return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\r\n    }).join(\"\");\r\n\r\n    const x = this.getX();\r\n    const y = this.getY();\r\n    pathD += \"L \" + this.getSvgX(x.max) + \" \" + this.getSvgY(y.min) + \" \"\r\n    + \"L \" + this.getSvgX(x.min) + \" \" + this.getSvgY(y.min) + \" \";\r\n\r\n    return <path className=\"linechart_area\" d={pathD} />\r\n  }\r\n  // Build grid axis\r\n  makeAxis() {\r\n    const {yLabelSize} = this.props;\r\n    const x = this.getX();\r\n    const y = this.getY();\r\n\r\n    return (\r\n      <g className=\"linechart_axis\">\r\n        <line\r\n          x1={this.getSvgX(x.min) - yLabelSize} y1={this.getSvgY(y.min)}\r\n          x2={this.getSvgX(x.max)} y2={this.getSvgY(y.min)}\r\n          strokeDasharray=\"5\" />\r\n        <line\r\n          x1={this.getSvgX(x.min) - yLabelSize} y1={this.getSvgY(y.max)}\r\n          x2={this.getSvgX(x.max)} y2={this.getSvgY(y.max)}\r\n          strokeDasharray=\"5\" />\r\n      </g>\r\n    );\r\n  }\r\n\r\n  makeLabels(){\r\n    const {svgHeight, svgWidth, xLabelSize, yLabelSize} = this.props;\r\n    const padding = 5;\r\n    return(\r\n      <g className=\"linechart_label\">\r\n        {/* Y AXIS LABELS */}\r\n        <text transform={`translate(${yLabelSize/2}, 20)`} textAnchor=\"middle\">\r\n          {this.getY().max.toLocaleString('us-EN',{ style: 'currency', currency: 'EUR' })}\r\n        </text>\r\n        <text transform={`translate(${yLabelSize/2}, ${svgHeight - xLabelSize - padding})`} textAnchor=\"middle\">\r\n          {this.getY().min.toLocaleString('us-EN',{ style: 'currency', currency: 'EUR' })}\r\n        </text>\r\n        {/* X AXIS LABELS */}\r\n        <text transform={`translate(${yLabelSize}, ${svgHeight})`} textAnchor=\"start\">\r\n          { this.props.data[0].d }\r\n        </text>\r\n        <text transform={`translate(${svgWidth}, ${svgHeight})`} textAnchor=\"end\">\r\n          { this.props.data[this.props.data.length - 1].d }\r\n        </text>\r\n      </g>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {svgHeight, svgWidth} = this.props;\r\n\r\n    return (\r\n      <svg  width={svgWidth} height={svgHeight} viewBox={`0 0 ${svgWidth} ${svgHeight}`} className={'linechart'} >\r\n        <g>\r\n          {this.makeAxis()}\r\n          {this.makePath()}\r\n          {this.makeArea()}\r\n          {this.makeLabels()}\r\n        </g>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nLineChart.defaultProps = {\r\n  data: [],\r\n  color: '#2196F3',\r\n  pointRadius: 5,\r\n  svgHeight: 400,\r\n  svgWidth: 900,\r\n  xLabelSize: 20,\r\n  yLabelSize: 80\r\n}\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport LineChart from './LineChart';\r\nimport './ChartDataFetch.css';\r\n\r\nclass ChartDataFetch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fetchingData: true,\r\n      data: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getData = () => {\r\n      const url = 'https://api.coindesk.com/v1/bpi/historical/close.json?currency=EUR';\r\n\r\n      fetch(url).then(r => r.json())\r\n      .then((bitcoinData) => {\r\n        const sortedData = [];\r\n        let count = 0;\r\n        for (let date in bitcoinData.bpi) {\r\n          sortedData.push({\r\n            d: moment(date).format('MMM DD'),\r\n            p: bitcoinData.bpi[date].toLocaleString('us-EN', {style: 'currency', currency: 'USD'}),\r\n            x: count, // previous days\r\n            y: bitcoinData.bpi[date]  // numerical price\r\n          });\r\n          count++;\r\n        }\r\n        this.setState({\r\n          data: sortedData,\r\n          fetchingData: false\r\n        })\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      });\r\n    }\r\n    getData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <h2>30 Day Bitcoin Price Chart</h2>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='chart'>\r\n            { !this.state.fetchingData ?\r\n              <LineChart data={this.state.data} onChartHover={ (a,b) => this.handleChartHover(a,b) }/>\r\n              : null }\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div id=\"coindesk\"> Powered by <a\r\n            href=\"http://www.coindesk.com/price/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\">CoinDesk</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartDataFetch;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport PriceContainer from './PriceContainer';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\nimport Banner from './Banner';\nimport ChartDataFetch from './ChartDataFetch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coin: 'BTC'\n    };\n    this.setCrypto = this.setCrypto.bind(this);\n  }\n\n  setCrypto(string) {\n    this.setState({\n      coin: string\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar name={this.state.coin} onChange={this.setCrypto} />\n        <Banner name={this.state.coin} />\n        <PriceContainer name={this.state.coin} />\n        <ChartDataFetch />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}